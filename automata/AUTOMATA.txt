trecho = {comando [";"]} [("return" [listaexp] | "break") [";"]].

comando = ((Nome | ((Nome | "(" exp ")") {"[" exp "]" | "." Nome | args | ":" Nome args }) ("[" exp "]" | "." Nome)) {"," (Nome | ((Nome | "(" exp ")") {"[" exp "]" | "." Nome | args | ":" Nome args }) ("[" exp "]" | "." Nome))}) "=" listaexp | ((Nome | "(" exp ")") {"[" exp "]" | "." Nome | args | ":" Nome args }) (args | ":" Nome args) | "do" trecho "end" | "while" exp "do" trecho "end" | "repeat" trecho "until" exp | "if" exp "then" trecho {"elseif" exp "then" trecho} ["else" trecho] "end" | "for" Nome "=" exp "," exp ["," exp] "do" trecho "end" | "for" (Nome {"," Nome}) "in" listaexp "do" trecho "end" | "function" nomedafuncao corpodafuncao | "local" "function" Nome corpodafuncao | "local" (Nome {"," Nome}) ["=" listaexp].

listavar = (Nome | ((Nome | "(" exp ")") {"[" exp "]" | "." Nome | args | ":" Nome args }) ("[" exp "]" | "." Nome)) {"," (Nome | ((Nome | "(" exp ")") {"[" exp "]" | "." Nome | args | ":" Nome args }) ("[" exp "]" | "." Nome))}.

args = "(" [listaexp] ")" | ("{" [listadecampos] "}") | Cadeia.

listadecampos = campo {separadordecampos campo} [separadordecampos].

campo = "[" exp "]" "=" exp | Nome "=" exp | exp.

separadordecampos = "," | ";".

listaexp = {exp ","} exp.

exp = ("nil" | "false" | "true" | Numero | Cadeia | "..." | ("function" corpodafuncao) | ((Nome | "(" exp ")") {"[" exp "]" | "." Nome | args | ":" Nome args }) | ("{" [listadecampos] "}") | ("-" | "not" | "#") exp) {("+" | "-" | "*" | "/" | "^" | "%" | ".." | "<" | "<=" | ">" | ">=" | "==" | "~=" | "and" | "or") exp}.

nomedafuncao = Nome {"." Nome} [":" Nome].

corpodafuncao = "(" [listapar] ")" trecho "end".

listapar = (Nome {"," Nome}) ["," "..."] | "...".

opbin = "+" | "-" | "*" | "/" | "^" | "%" | ".." | "<" | "<=" | ">" | ">=" | "==" | "~=" | "and" | "or".
